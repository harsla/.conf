snippet be
	beforeEach(() => {
	  ${1}
	});
snippet ae
	afterEach(() => {
	  ${1}
	});
snippet f fn function
	function(${1}) {
	  ${2}
	}
snippet expect
	expect(${1}).to
snippet log
	console.log(${1});
snippet dlkt
	'${1}': function (test) {
	  test
	  .open(${2})
	  .assert${3}
	  .done();
	},
snippet tofixture
	require('fs').writeFileSync("/tmp/fixture.json", JSON.stringify(${1}, null, 2));
snippet throw
	throw new Error(${1});
snippet bluebird
	var Promise = require('bluebird')
snippet promise
	return new Promise(function(resolve, reject) {
	  ${2}
	});
snippet 501
	res.status(501).end();
snippet try
	try {
	  $1
	} catch (e) {
	  $2
	}
snippet for
	for (var i=0; i<${1}.length; i++) {
	  ${2}
	}
snippet mtemplate
	Template.${1:TemplateName}.helpers({});
	Template.${3:$1}.events({});
snippet modclass
	module.exports = ${1:ClassName};
	function ${3:$1}(){};
snippet mbe
	Meteor.bindEnvironment(${1})
snippet mbef
	Meteor.bindEnvironment(function() {
	  ${1}
	})
snippet debug
	const debug = require('debug')('${1}');
snippet d
	debug(${1});

snippet upto
	Array(${1}).fill().map((_,i)=>i)
